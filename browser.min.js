var browser = (function() {
    "use strict";
  
    var browserInfo = {
      name: null,
      version: null,
      os: null,
      osVersion: null,
      touch: null,
      mobile: null,
      canUse: function(property) {
        var tempDiv = document.createElement("div");
        var capitalizedProperty = property.charAt(0).toUpperCase() + property.slice(1);
        
        return property in tempDiv.style ||
          "Moz" + capitalizedProperty in tempDiv.style ||
          "Webkit" + capitalizedProperty in tempDiv.style ||
          "O" + capitalizedProperty in tempDiv.style ||
          "ms" + capitalizedProperty in tempDiv.style;
      },
      init: function() {
        var userAgent = navigator.userAgent;
        var browserName = "other";
        var browserVersion = 0;
        var osName = "other";
        var osVersion = 0;
  
        var browserPatterns = [
          ["firefox", /Firefox\/([0-9\.]+)/],
          ["bb", /BlackBerry.+Version\/([0-9\.]+)/],
          ["bb", /BB[0-9]+.+Version\/([0-9\.]+)/],
          ["opera", /OPR\/([0-9\.]+)/],
          ["opera", /Opera\/([0-9\.]+)/],
          ["edge", /Edge\/([0-9\.]+)/],
          ["safari", /Version\/([0-9\.]+).+Safari/],
          ["chrome", /Chrome\/([0-9\.]+)/],
          ["ie", /MSIE ([0-9]+)/],
          ["ie", /Trident\/.+rv:([0-9]+)/]
        ];
  
        for (var i = 0; i < browserPatterns.length; i++) {
          if (userAgent.match(browserPatterns[i][1])) {
            browserName = browserPatterns[i][0];
            browserVersion = parseFloat(RegExp.$1);
            break;
          }
        }
  
        var osPatterns = [
          ["ios", /([0-9_]+) like Mac OS X/, function(match) {
            return match.replace("_", ".").replace("_", ".");
          }],
          ["ios", /CPU like Mac OS X/, function(match) {
            return 0;
          }],
          ["wp", /Windows Phone ([0-9\.]+)/, null],
          ["android", /Android ([0-9\.]+)/, null],
          ["mac", /Macintosh.+Mac OS X ([0-9_]+)/, function(match) {
            return match.replace("_", ".").replace("_", ".");
          }],
          ["windows", /Windows NT ([0-9\.]+)/, null],
          ["bb", /BlackBerry.+Version\/([0-9\.]+)/, null],
          ["bb", /BB[0-9]+.+Version\/([0-9\.]+)/, null],
          ["linux", /Linux/, null],
          ["bsd", /BSD/, null],
          ["unix", /X11/, null]
        ];
  
        for (var j = 0; j < osPatterns.length; j++) {
          if (userAgent.match(osPatterns[j][1])) {
            osName = osPatterns[j][0];
            osVersion = parseFloat(osPatterns[j][2] ? osPatterns[j][2](RegExp.$1) : RegExp.$1);
            break;
          }
        }
  
        if (osName === "mac" && "ontouchstart" in window &&
            (screen.width === 1024 && screen.height === 1366 ||
             screen.width === 834 && screen.height === 1112 ||
             screen.width === 810 && screen.height === 1080 ||
             screen.width === 768 && screen.height === 1024)) {
          osName = "ios";
        }
  
        this.name = browserName;
        this.version = browserVersion;
        this.os = osName;
        this.osVersion = osVersion;
        this.touch = osName === "wp" ? navigator.msMaxTouchPoints > 0 : "ontouchstart" in window;
        this.mobile = osName === "wp" || osName === "android" || osName === "ios" || osName === "bb";
      }
    };
  
    browserInfo.init();
    return browserInfo;
  })();
  
  